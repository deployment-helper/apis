name: App Management Workflow
run-name: ${{ github.actor }} - ${{ github.event_name }} - ${{ github.sha }}
on:
  push:
    branches:
      - main
    # paths:
    #   - 'app-management/**'
  pull_request:
    branches:
      - main
env:
  PROJECT_ID: chat-gpt-videos
  REGION: asia-south1
  REPOSITORY_NAME: app-management
  IMAGE_NAME: nest-server
  BS_IMAGE_NAME: batch-nest-server

# Set default working directory to app-management
defaults:
  run:
    working-directory: ./app-management

jobs:
  test_and_build:
    name: Test and Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: cp example.env .env
      - run: npm ci
      - run: npm run lint
      - run: npm run test:cov
      - run: npm run build
  github_pkg:
    name: Github build and push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
#          GitHub Personal Access Token
          password: ${{ secrets.ACCESS_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: ./app-management
          file: ./app-management/Dockerfile
          push: true
          tags: ghcr.io/deployment-helper/app-management:lastest
  github_pkg_batch_server:
    name: Github batch server build and push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
#          GitHub personal access token
          password: ${{ secrets.ACCESS_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: ./app-management
          file: ./app-management/Dockerfile.batch-service
          push: true
          tags: ghcr.io/deployment-helper/app-management-batch-server:lastest
  gcp_server:
    name: GCP Server build and push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: gcloud --quiet auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build Docker image
        run: docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

      - name: Push Docker image to Artifact Registry
        run: docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  gcp_bath_server:
    name: GCP batch server build and push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: gcloud --quiet auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build Docker image
#        Build image from Dockerfile.batch-service
        run: docker build -f Dockerfile.batch-service -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.BS_IMAGE_NAME }}:${{ github.sha }} .

      - name: Push Docker image to Artifact Registry
        run: docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.BS_IMAGE_NAME }}:${{ github.sha }}
