# ---- Base ----
FROM node:18 AS base

WORKDIR /app

COPY apps ./apps
COPY libs ./libs
COPY nest-cli.json ./
COPY package*.json ./
COPY tsconfig*.json ./

RUN npm install
RUN npm run build:bs

# ---- Release ----
FROM node:18-buster-slim AS release

# Update package lists and install dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    ca-certificates \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libc6 \
    libcairo2 \
    libcups2 \
    libdbus-1-3 \
    libexpat1 \
    libfontconfig1 \
    libgbm1 \
    libgcc1 \
    libglib2.0-0 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libstdc++6 \
    libx11-6 \
    libx11-xcb1 \
    libxcb1 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxi6 \
    libxrandr2 \
    libxrender1 \
    libxss1 \
    libxtst6 \
    lsb-release \
    wget \
    xdg-utils \
    --no-install-recommends

# Download and install Google Chrome
RUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \
    && dpkg -i google-chrome-stable_current_amd64.deb; apt-get -fy install

# Clean up to reduce image size
RUN apt-get clean \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/* google-chrome-stable_current_amd64.deb

# Set working directory for the application
WORKDIR /app

# Install production dependencies
COPY --from=base /app/package*.json ./
RUN npm install --only=production

# Copy built application files
COPY --from=base /app/dist ./dist

# Expose the application port
ARG PORT=3000
ENV PORT=${PORT}

EXPOSE ${PORT}

# Define the command to run the application
ENTRYPOINT ["npm", "run"]
CMD ["start:bs:prod"]
